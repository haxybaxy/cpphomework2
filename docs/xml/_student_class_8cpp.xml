<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="_student_class_8cpp" kind="file" language="C++">
    <compoundname>StudentClass.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">tuple</includes>
    <includes local="no">random</includes>
    <includes local="no">ctime</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/zaidsaheb/Desktop/oophomework/src/StudentClass.cpp</label>
        <link refid="_student_class_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ctime</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>random</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="5">
        <label>tuple</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_student" prot="public">Student</innerclass>
    <innerclass refid="class_student_1_1_course" prot="public">Student::Course</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="_student_class_8cpp_1acc81757e33eec6e2d8deb1b0a0c9f03b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; std::string, int, double &gt;</type>
        <definition>std::tuple&lt; std::string, int, double &gt; getStudentInfo</definition>
        <argsstring>()</argsstring>
        <name>getStudentInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zaidsaheb/Desktop/oophomework/src/StudentClass.cpp" line="8" column="13" bodyfile="/Users/zaidsaheb/Desktop/oophomework/src/StudentClass.cpp" bodystart="8" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="_student_class_8cpp_1a9c47863c3ed0d00457f704ca7dd5d6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool compareGpa</definition>
        <argsstring>(const Student &amp;student1, const Student &amp;student2)</argsstring>
        <name>compareGpa</name>
        <param>
          <type>const <ref refid="class_student" kindref="compound">Student</ref> &amp;</type>
          <declname>student1</declname>
        </param>
        <param>
          <type>const <ref refid="class_student" kindref="compound">Student</ref> &amp;</type>
          <declname>student2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zaidsaheb/Desktop/oophomework/src/StudentClass.cpp" line="143" column="6" bodyfile="/Users/zaidsaheb/Desktop/oophomework/src/StudentClass.cpp" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="_student_class_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zaidsaheb/Desktop/oophomework/src/StudentClass.cpp" line="167" column="5" bodyfile="/Users/zaidsaheb/Desktop/oophomework/src/StudentClass.cpp" bodystart="167" bodyend="198"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="_student_class_8cpp_1acc81757e33eec6e2d8deb1b0a0c9f03b" refkind="member"><highlight class="normal">std::tuple<sp/>&lt;std::string,<sp/>int,<sp/>double&gt;<sp/><ref refid="_student_class_8cpp_1acc81757e33eec6e2d8deb1b0a0c9f03b" kindref="member">getStudentInfo</ref>()<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>names<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Zaid&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Jose&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Sebastian&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Laura&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Sofia&quot;</highlight><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>List<sp/>of<sp/><sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>std::random_device<sp/>rd;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>std::mt19937<sp/>gen(rd());</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>std::uniform_int_distribution&lt;int&gt;<sp/>nameDist(0,<sp/>names.size()<sp/>-<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Randomly<sp/>select<sp/>a<sp/>first<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>std::string<sp/>name<sp/>=<sp/>names[nameDist(gen)];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>std::uniform_int_distribution&lt;int&gt;<sp/>ageDist(18,<sp/>25);<sp/></highlight><highlight class="comment">//<sp/>Randomly<sp/>select<sp/>an<sp/>age</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>age<sp/>=<sp/>ageDist(gen);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>std::uniform_real_distribution&lt;double&gt;<sp/>gpaDist(1.0,<sp/>10.0);<sp/></highlight><highlight class="comment">//<sp/>Randomly<sp/>select<sp/>a<sp/>GPA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gpa<sp/>=<sp/>gpaDist(gen);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(name,<sp/>age,<sp/>gpa);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_student" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_student" kindref="compound">Student</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Nested<sp/>Class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29" refid="class_student_1_1_course" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_student_1_1_course" kindref="compound">Course</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="class_student_1_1_course_1aac62feb1193b7f9b07b98e7fc01a1ed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_student_1_1_course_1aac62feb1193b7f9b07b98e7fc01a1ed9" kindref="member">courseName</ref>;</highlight></codeline>
<codeline lineno="32" refid="class_student_1_1_course_1a98d4341aed9ef5e63247d861903ddac1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_student_1_1_course_1a98d4341aed9ef5e63247d861903ddac1" kindref="member">year</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_student_1_1_course_1a04355aa5ca8d9a1e010ca0725d82c470" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_student_1_1_course_1a04355aa5ca8d9a1e010ca0725d82c470" kindref="member">Course</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_student_1_1_course_1aac62feb1193b7f9b07b98e7fc01a1ed9" kindref="member">courseName</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_student_1_1_course_1a98d4341aed9ef5e63247d861903ddac1" kindref="member">year</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_student_1_1_course_1aac62feb1193b7f9b07b98e7fc01a1ed9" kindref="member">courseName</ref>(<ref refid="class_student_1_1_course_1aac62feb1193b7f9b07b98e7fc01a1ed9" kindref="member">courseName</ref>),<sp/><ref refid="class_student_1_1_course_1a98d4341aed9ef5e63247d861903ddac1" kindref="member">year</ref>(<ref refid="class_student_1_1_course_1a98d4341aed9ef5e63247d861903ddac1" kindref="member">year</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39" refid="class_student_1a9aeb48a925f370292564def17482f0ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_student_1a9aeb48a925f370292564def17482f0ec" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="40" refid="class_student_1a552a431a43ffc545d180424597d51f97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_student_1a552a431a43ffc545d180424597d51f97" kindref="member">age</ref>;</highlight></codeline>
<codeline lineno="41" refid="class_student_1ad87196a7500cae94e5ed747770fd824b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_student_1ad87196a7500cae94e5ed747770fd824b" kindref="member">gpa</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_student_1abbcc0dc9bb1108f48d0471ac627f290f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_student_1abbcc0dc9bb1108f48d0471ac627f290f" kindref="member">ageAccessed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_student_1af6499083c4f357585fdacf2e334fe99a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;class<sp/>Course&gt;<sp/><ref refid="class_student_1af6499083c4f357585fdacf2e334fe99a" kindref="member">courses</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_student_1aa120a31eaa4632ee9596d720444e5356" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_student_1aa120a31eaa4632ee9596d720444e5356" kindref="member">numStudents</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_student_1a7962fe078ff7178ff56073fd83c82744" kindref="member">Student</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_student_1a9aeb48a925f370292564def17482f0ec" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_student_1a552a431a43ffc545d180424597d51f97" kindref="member">age</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_student_1ad87196a7500cae94e5ed747770fd824b" kindref="member">gpa</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_student_1af2b671e64af8a240f59652414a8b8047" kindref="member">getName</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_student_1af815bffcccc0b1d0b4413ae70f7a4d11" kindref="member">getAge</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_student_1a3d872c6188ee2042a97614247f7ba3ef" kindref="member">getGpa</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_student_1a9a22c0f9af7446b6c529b623e780b134" kindref="member">getNumStudents</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Setters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1add287224cef065944df9da7e8f38c116" kindref="member">setName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>newName);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1ab4888f0d5da4bae458ea3853ebeb314b" kindref="member">setAge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newAge);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1a88065a49eb909dc29e72ea528dcb6c24" kindref="member">setGpa</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newGpa);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Misc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1a3567f5c4220ffa88a8855998b3b99b43" kindref="member">printInfo</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Friend<sp/>Function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_student_1a9c47863c3ed0d00457f704ca7dd5d6b8" kindref="member">compareGpa</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_student" kindref="compound">Student</ref>&amp;<sp/>student1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_student" kindref="compound">Student</ref>&amp;<sp/>student2);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Methods<sp/>related<sp/>to<sp/>courses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1a30e977ee3bab39e95f0d5090c2b664ce" kindref="member">enroll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_student_1_1_course" kindref="compound">Course</ref>&amp;<sp/>course);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1a6c10a0e1d02be92cdf058e1aa069e973" kindref="member">printCourses</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_student_1aa120a31eaa4632ee9596d720444e5356" kindref="member">Student::numStudents</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>static<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_student_1a7962fe078ff7178ff56073fd83c82744" refkind="member"><highlight class="normal"><ref refid="class_student_1a7962fe078ff7178ff56073fd83c82744" kindref="member">Student::Student</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>age,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gpa)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="class_student_1add287224cef065944df9da7e8f38c116" kindref="member">setName</ref>(<ref refid="class_student_1a9aeb48a925f370292564def17482f0ec" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="class_student_1ab4888f0d5da4bae458ea3853ebeb314b" kindref="member">setAge</ref>(<ref refid="class_student_1a552a431a43ffc545d180424597d51f97" kindref="member">age</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="class_student_1a88065a49eb909dc29e72ea528dcb6c24" kindref="member">setGpa</ref>(<ref refid="class_student_1ad87196a7500cae94e5ed747770fd824b" kindref="member">gpa</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="class_student_1aa120a31eaa4632ee9596d720444e5356" kindref="member">numStudents</ref>++;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//Accessors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_student_1af2b671e64af8a240f59652414a8b8047" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_student_1af2b671e64af8a240f59652414a8b8047" kindref="member">Student::getName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_student_1a9aeb48a925f370292564def17482f0ec" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="class_student_1af815bffcccc0b1d0b4413ae70f7a4d11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_student_1af815bffcccc0b1d0b4413ae70f7a4d11" kindref="member">Student::getAge</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="class_student_1abbcc0dc9bb1108f48d0471ac627f290f" kindref="member">ageAccessed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_student_1a552a431a43ffc545d180424597d51f97" kindref="member">age</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_student_1a3d872c6188ee2042a97614247f7ba3ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_student_1a3d872c6188ee2042a97614247f7ba3ef" kindref="member">Student::getGpa</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_student_1ad87196a7500cae94e5ed747770fd824b" kindref="member">gpa</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_student_1a9a22c0f9af7446b6c529b623e780b134" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_student_1a9a22c0f9af7446b6c529b623e780b134" kindref="member">Student::getNumStudents</ref>()<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_student_1aa120a31eaa4632ee9596d720444e5356" kindref="member">numStudents</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//Mutators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_student_1add287224cef065944df9da7e8f38c116" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1add287224cef065944df9da7e8f38c116" kindref="member">Student::setName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>newName)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newName.empty())<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Name<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="class_student_1a9aeb48a925f370292564def17482f0ec" kindref="member">name</ref><sp/>=<sp/>newName;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_student_1ab4888f0d5da4bae458ea3853ebeb314b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1ab4888f0d5da4bae458ea3853ebeb314b" kindref="member">Student::setAge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newAge)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newAge<sp/>&lt;<sp/>0<sp/>||<sp/>newAge<sp/>&gt;<sp/>120)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Age<sp/>needs<sp/>to<sp/>be<sp/>between<sp/>0<sp/>and<sp/>120&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="class_student_1a552a431a43ffc545d180424597d51f97" kindref="member">age</ref><sp/>=<sp/>newAge;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_student_1a88065a49eb909dc29e72ea528dcb6c24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1a88065a49eb909dc29e72ea528dcb6c24" kindref="member">Student::setGpa</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newGpa)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newGpa<sp/>&lt;<sp/>0<sp/>||<sp/>newGpa<sp/>&gt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GPA<sp/>needs<sp/>to<sp/>be<sp/>between<sp/>0<sp/>and<sp/>10&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="class_student_1ad87196a7500cae94e5ed747770fd824b" kindref="member">gpa</ref><sp/>=<sp/>newGpa;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//Misc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_student_1a3567f5c4220ffa88a8855998b3b99b43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1a3567f5c4220ffa88a8855998b3b99b43" kindref="member">Student::printInfo</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_student_1a9aeb48a925f370292564def17482f0ec" kindref="member">name</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Age:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_student_1a552a431a43ffc545d180424597d51f97" kindref="member">age</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Age<sp/>Accessed:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>(<ref refid="class_student_1abbcc0dc9bb1108f48d0471ac627f290f" kindref="member">ageAccessed</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GPA:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_student_1ad87196a7500cae94e5ed747770fd824b" kindref="member">gpa</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//Friend<sp/>Function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_student_1a9c47863c3ed0d00457f704ca7dd5d6b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_student_class_8cpp_1a9c47863c3ed0d00457f704ca7dd5d6b8" kindref="member">compareGpa</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_student" kindref="compound">Student</ref>&amp;<sp/>student1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_student" kindref="compound">Student</ref>&amp;<sp/>student2)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>student1.<ref refid="class_student_1ad87196a7500cae94e5ed747770fd824b" kindref="member">gpa</ref><sp/>&gt;<sp/>student2.<ref refid="class_student_1ad87196a7500cae94e5ed747770fd824b" kindref="member">gpa</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//Nested<sp/>Class<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="class_student_1a30e977ee3bab39e95f0d5090c2b664ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1a30e977ee3bab39e95f0d5090c2b664ce" kindref="member">Student::enroll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_student_1_1_course" kindref="compound">Course</ref>&amp;<sp/>course)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_student_1af6499083c4f357585fdacf2e334fe99a" kindref="member">courses</ref>.push_back(course);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Method<sp/>to<sp/>print<sp/>enrolled<sp/>courses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_student_1a6c10a0e1d02be92cdf058e1aa069e973" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_student_1a6c10a0e1d02be92cdf058e1aa069e973" kindref="member">Student::printCourses</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_student_1af6499083c4f357585fdacf2e334fe99a" kindref="member">courses</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="class_student_1a9aeb48a925f370292564def17482f0ec" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>enrolled<sp/>in<sp/>any<sp/>courses.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="class_student_1a9aeb48a925f370292564def17482f0ec" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>Courses:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>course<sp/>:<sp/><ref refid="class_student_1af6499083c4f357585fdacf2e334fe99a" kindref="member">courses</ref>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>course.courseName</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(Year:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>course.year<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="_student_class_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_student_class_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>std::tuple<sp/>&lt;std::string,<sp/>int,<sp/>double&gt;<sp/>studentInfo1<sp/>=<sp/><ref refid="_student_class_8cpp_1acc81757e33eec6e2d8deb1b0a0c9f03b" kindref="member">getStudentInfo</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>std::tuple<sp/>&lt;std::string,<sp/>int,<sp/>double&gt;<sp/>studentInfo2<sp/>=<sp/><ref refid="_student_class_8cpp_1acc81757e33eec6e2d8deb1b0a0c9f03b" kindref="member">getStudentInfo</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>student<sp/>object<sp/>using<sp/>the<sp/>generated<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="class_student" kindref="compound">Student</ref><sp/>student1(std::get&lt;0&gt;(studentInfo1),<sp/>std::get&lt;1&gt;(studentInfo1),<sp/>std::get&lt;2&gt;(studentInfo1));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="class_student" kindref="compound">Student</ref><sp/>student2(std::get&lt;0&gt;(studentInfo2),<sp/>std::get&lt;1&gt;(studentInfo2),<sp/>std::get&lt;2&gt;(studentInfo2));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enroll<sp/>the<sp/>student<sp/>in<sp/>some<sp/>courses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>student1.<ref refid="class_student_1a30e977ee3bab39e95f0d5090c2b664ce" kindref="member">enroll</ref>(<ref refid="class_student_1_1_course" kindref="compound">Student::Course</ref>(</highlight><highlight class="stringliteral">&quot;Math&quot;</highlight><highlight class="normal">,<sp/>2021));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>student1.<ref refid="class_student_1a30e977ee3bab39e95f0d5090c2b664ce" kindref="member">enroll</ref>(<ref refid="class_student_1_1_course" kindref="compound">Student::Course</ref>(</highlight><highlight class="stringliteral">&quot;Science&quot;</highlight><highlight class="normal">,<sp/>2022));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>student2.<ref refid="class_student_1a30e977ee3bab39e95f0d5090c2b664ce" kindref="member">enroll</ref>(<ref refid="class_student_1_1_course" kindref="compound">Student::Course</ref>(</highlight><highlight class="stringliteral">&quot;History&quot;</highlight><highlight class="normal">,<sp/>2021));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>student2.<ref refid="class_student_1a30e977ee3bab39e95f0d5090c2b664ce" kindref="member">enroll</ref>(<ref refid="class_student_1_1_course" kindref="compound">Student::Course</ref>(</highlight><highlight class="stringliteral">&quot;Art&quot;</highlight><highlight class="normal">,<sp/>2022));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>student<sp/>info<sp/>and<sp/>courses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>student1.<ref refid="class_student_1a3567f5c4220ffa88a8855998b3b99b43" kindref="member">printInfo</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>student1.<ref refid="class_student_1a6c10a0e1d02be92cdf058e1aa069e973" kindref="member">printCourses</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>student2.<ref refid="class_student_1a3567f5c4220ffa88a8855998b3b99b43" kindref="member">printInfo</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>student2.<ref refid="class_student_1a6c10a0e1d02be92cdf058e1aa069e973" kindref="member">printCourses</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>number<sp/>of<sp/>students</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>students:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_student_1a9a22c0f9af7446b6c529b623e780b134" kindref="member">Student::getNumStudents</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>the<sp/>GPAs<sp/>of<sp/>the<sp/>two<sp/>students</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_student_class_8cpp_1a9c47863c3ed0d00457f704ca7dd5d6b8" kindref="member">compareGpa</ref>(student1,<sp/>student2))<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>student1.<ref refid="class_student_1af2b671e64af8a240f59652414a8b8047" kindref="member">getName</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>a<sp/>higher<sp/>GPA<sp/>than<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>student2.<ref refid="class_student_1af2b671e64af8a240f59652414a8b8047" kindref="member">getName</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>student2.<ref refid="class_student_1af2b671e64af8a240f59652414a8b8047" kindref="member">getName</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>a<sp/>higher<sp/>GPA<sp/>than<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>student1.<ref refid="class_student_1af2b671e64af8a240f59652414a8b8047" kindref="member">getName</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/zaidsaheb/Desktop/oophomework/src/StudentClass.cpp"/>
  </compounddef>
</doxygen>
