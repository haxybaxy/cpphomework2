<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="_dynamic_array_test_8cpp" kind="file" language="C++">
    <compoundname>DynamicArrayTest.cpp</compoundname>
    <includes refid="_dynamic_array_8h" local="yes">DynamicArray.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">random</includes>
    <incdepgraph>
      <node id="2">
        <label>DynamicArray.h</label>
        <link refid="_dynamic_array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/zaidsaheb/Desktop/oophomework/src/DynamicArrayTest.cpp</label>
        <link refid="_dynamic_array_test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>random</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_dynamic_array_test_8cpp_1a73947c1e8216fe18ef04971613084df6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classoop_1_1_dynamic_array" kindref="compound">DynamicArray</ref></type>
        <definition>DynamicArray createRandomArray</definition>
        <argsstring>()</argsstring>
        <name>createRandomArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zaidsaheb/Desktop/oophomework/src/DynamicArrayTest.cpp" line="7" column="14" bodyfile="/Users/zaidsaheb/Desktop/oophomework/src/DynamicArrayTest.cpp" bodystart="7" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="_dynamic_array_test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zaidsaheb/Desktop/oophomework/src/DynamicArrayTest.cpp" line="17" column="5" bodyfile="/Users/zaidsaheb/Desktop/oophomework/src/DynamicArrayTest.cpp" bodystart="17" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_dynamic_array_8h" kindref="compound">DynamicArray.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceoop" kindref="compound">oop</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="_dynamic_array_test_8cpp_1a73947c1e8216fe18ef04971613084df6" refkind="member"><highlight class="normal"><ref refid="classoop_1_1_dynamic_array" kindref="compound">DynamicArray</ref><sp/><ref refid="_dynamic_array_test_8cpp_1a73947c1e8216fe18ef04971613084df6" kindref="member">createRandomArray</ref>(){</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::default_random_engine<sp/>generator;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::uniform_int_distribution&lt;int&gt;<sp/>distribution(1,100);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoop_1_1_dynamic_array" kindref="compound">DynamicArray</ref><sp/>a(10);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i]<sp/>=<sp/>distribution(generator);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="_dynamic_array_test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_dynamic_array_test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(){</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoop_1_1_dynamic_array" kindref="compound">DynamicArray</ref><sp/>a(10,<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>10<sp/>elements,<sp/>all<sp/>initialized<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>a[0]<sp/>=<sp/>2;<sp/>a[1]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoop_1_1_dynamic_array" kindref="compound">DynamicArray</ref><sp/>b<sp/>=<sp/>a;<sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoop_1_1_dynamic_array" kindref="compound">DynamicArray</ref><sp/>c<sp/>=<sp/><ref refid="_dynamic_array_test_8cpp_1a73947c1e8216fe18ef04971613084df6" kindref="member">createRandomArray</ref>();<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoop_1_1_dynamic_array" kindref="compound">DynamicArray</ref><sp/>d(b);<sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoop_1_1_dynamic_array" kindref="compound">DynamicArray</ref><sp/>e(<ref refid="_dynamic_array_test_8cpp_1a73947c1e8216fe18ef04971613084df6" kindref="member">createRandomArray</ref>());<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Array<sp/>a:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a<sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight><highlight class="comment">//stream<sp/>insertion<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Array<sp/>b:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>b<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Array<sp/>c:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>c<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Array<sp/>d:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Array<sp/>e:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classoop_1_1_dynamic_array" kindref="compound">DynamicArray</ref><sp/>f<sp/>=<sp/>a<sp/>+<sp/>b;<sp/></highlight><highlight class="comment">//<sp/>Addition<sp/>operator,<sp/>concatenates<sp/>the<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Array<sp/>f<sp/>(a<sp/>+<sp/>b):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>f<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f.<ref refid="classoop_1_1_dynamic_array_1a85af9944c53cc8be191f3f347a4e253a" kindref="member">size</ref>()<sp/>!=<sp/>a.<ref refid="classoop_1_1_dynamic_array_1a85af9944c53cc8be191f3f347a4e253a" kindref="member">size</ref>()<sp/>+<sp/>b.<ref refid="classoop_1_1_dynamic_array_1a85af9944c53cc8be191f3f347a4e253a" kindref="member">size</ref>()){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>size<sp/>of<sp/>f<sp/>is<sp/>not<sp/>the<sp/>sum<sp/>of<sp/>sizes<sp/>of<sp/>a<sp/>and<sp/>b&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Destructor<sp/>is<sp/>called<sp/>on<sp/>all<sp/>objects:<sp/>no<sp/>memory<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/zaidsaheb/Desktop/oophomework/src/DynamicArrayTest.cpp"/>
  </compounddef>
</doxygen>
